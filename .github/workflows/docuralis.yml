name: Docuralis CI/CD

on:
  push:
    branches: [main, dev, staging]
    paths:
      - "apps/docuralis/**"
      - ".github/workflows/docuralis.yml"
  pull_request:
    branches: [main, dev, staging]
    paths:
      - "apps/docuralis/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/docuralis

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/docuralis

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run linter
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test
          NEXTAUTH_SECRET: test-secret-key
          NEXTAUTH_URL: http://localhost:3000

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/docuralis/coverage/coverage-final.json
          flags: docuralis

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: apps/docuralis

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./apps/docuralis
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update deployment version
        run: |
          echo "Image built and pushed successfully"
          echo "Tags: ${{ steps.meta.outputs.tags }}"

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy to dev
        run: |
          echo "Deploying to dev environment"
          echo "ArgoCD will automatically sync the changes"

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          echo "ArgoCD will automatically sync the changes"

  deploy-prod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          echo "ArgoCD will automatically sync the changes"
