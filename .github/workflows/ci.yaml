---
# CI Pipeline - Lint and Validate
name: CI - Lint and Validate

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Lint YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install yamllint
        run: pip install yamllint

      - name: Run yamllint
        run: yamllint .

  validate-kubernetes:
    name: Validate Kubernetes Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Validate manifests
        run: |
          for file in $(find . -name '*.yaml' -o -name '*.yml'); do
            if grep -q "apiVersion:" "$file" 2>/dev/null; then
              echo "Validating $file"
              kubectl apply --dry-run=client -f "$file" || \
                echo "⚠️  Failed: $file"
            fi
          done

  validate-kustomize:
    name: Validate Kustomize Overlays
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kustomize
        run: |
          curl -s \
            "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" \
            | bash
          sudo mv kustomize /usr/local/bin/

      - name: Validate Dev Environment
        run: |
          kustomize build infra/environments/dev > /dev/null
          echo "✅ Dev environment is valid"

      - name: Validate Staging Environment
        run: |
          kustomize build infra/environments/staging > /dev/null
          echo "✅ Staging environment is valid"

      - name: Validate Production Environment
        run: |
          kustomize build infra/environments/production > /dev/null
          echo "✅ Production environment is valid"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'table'
          exit-code: '0'

      - name: Upload Trivy results
        if: false  # Disable SARIF upload until repo has proper permissions
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
