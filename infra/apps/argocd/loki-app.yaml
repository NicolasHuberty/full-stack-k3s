---
# Loki Application
# Log aggregation system integrated with Grafana

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: loki-stack
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 2.9.11
    helm:
      releaseName: loki
      values: |
        loki:
          enabled: true
          persistence:
            enabled: true
            storageClassName: local-path
            size: 30Gi
          config:
            auth_enabled: false
            ingester:
              chunk_idle_period: 3m
              chunk_block_size: 262144
              chunk_retain_period: 1m
              max_transfer_retries: 0
              lifecycler:
                ring:
                  kvstore:
                    store: inmemory
                  replication_factor: 1
            limits_config:
              enforce_metric_name: false
              reject_old_samples: true
              reject_old_samples_max_age: 168h
              max_entries_limit_per_query: 5000
              max_streams_per_user: 0
              max_global_streams_per_user: 0
            schema_config:
              configs:
              - from: 2020-10-24
                store: boltdb-shipper
                object_store: filesystem
                schema: v11
                index:
                  prefix: index_
                  period: 24h
            server:
              http_listen_port: 3100
            storage_config:
              boltdb_shipper:
                active_index_directory: /loki/boltdb-shipper-active
                cache_location: /loki/boltdb-shipper-cache
                cache_ttl: 24h
                shared_store: filesystem
              filesystem:
                directory: /loki/chunks
            chunk_store_config:
              max_look_back_period: 0s
            table_manager:
              retention_deletes_enabled: true
              retention_period: 336h

        promtail:
          enabled: true
          config:
            lokiAddress: http://{{ .Release.Name }}:3100/loki/api/v1/push
            snippets:
              pipelineStages:
                - docker: {}
                - multiline:
                    firstline: '^\d{4}-\d{2}-\d{2}'
                    max_wait_time: 3s
              scrapeConfigs: |
                - job_name: kubernetes-pods
                  pipeline_stages:
                    {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
                  kubernetes_sd_configs:
                    - role: pod
                  relabel_configs:
                    - source_labels:
                        - __meta_kubernetes_pod_controller_name
                      regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                      action: replace
                      target_label: __tmp_controller_name
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_name
                        - __meta_kubernetes_pod_label_app
                        - __tmp_controller_name
                        - __meta_kubernetes_pod_name
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: app
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                        - __meta_kubernetes_pod_label_release
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: instance
                    - source_labels:
                        - __meta_kubernetes_pod_label_app_kubernetes_io_component
                        - __meta_kubernetes_pod_label_component
                      regex: ^;*([^;]+)(;.*)?$
                      action: replace
                      target_label: component
                    - action: replace
                      source_labels:
                        - __meta_kubernetes_pod_node_name
                      target_label: node_name
                    - action: replace
                      source_labels:
                        - __meta_kubernetes_namespace
                      target_label: namespace
                    - action: replace
                      replacement: $1
                      separator: /
                      source_labels:
                        - namespace
                        - app
                      target_label: job
                    - action: replace
                      source_labels:
                        - __meta_kubernetes_pod_name
                      target_label: pod
                    - action: replace
                      source_labels:
                        - __meta_kubernetes_pod_container_name
                      target_label: container
                    - action: replace
                      replacement: /var/log/pods/*$1/*.log
                      separator: /
                      source_labels:
                        - __meta_kubernetes_pod_uid
                        - __meta_kubernetes_pod_container_name
                      target_label: __path__
                    - action: replace
                      regex: true/(.*)
                      replacement: /var/log/pods/*$1/*.log
                      separator: /
                      source_labels:
                        - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
                        - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
                        - __meta_kubernetes_pod_container_name
                      target_label: __path__

        grafana:
          enabled: false  # We install Grafana separately with kube-prometheus-stack

        prometheus:
          enabled: false  # We use kube-prometheus-stack
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
